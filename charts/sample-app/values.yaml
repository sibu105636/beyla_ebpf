goHelloWorld:
  goHelloWorld:
    image:
      repository: callicoder/go-hello-world
      tag: 1.0.0
    imagePullPolicy: Always
  replicas: 3
goHelloWorldService:
  ports:
  - name: http
    port: 9090
    targetPort: 8080
  type: NodePort
kubernetesClusterDomain: cluster.local
nginx:
  nginx:
    image:
      repository: nginx
      tag: latest
    imagePullPolicy: IfNotPresent
  nginxConf: |-
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;
    # load_module /usr/lib/nginx/modules/ndk_http_module.so;
    # load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;
    # pcre_jit on;
    events {
      worker_connections  4096;  ## Default: 1024
    }
    http {
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        "$http_user_agent" "$http_x_forwarded_for" $http_x_scope_orgid';
      access_log   /dev/stderr  main;
      sendfile     on;
      tcp_nopush   on;
      resolver kube-dns.kube-system.svc.cluster.local;
      # lua_package_path "/etc/pre-install/nginx-jwt/?.lua;/etc/pre-install/nginx-jwt/resty/?.lua;;";
      server { # simple reverse-proxy
        listen  80;
        location = /healthz {
          # auth_basic off is not set here, even when a basic auth directive is
          # included in the server block, as Nginx's NGX_HTTP_REWRITE_PHASE
          # (point when this return statement is evaluated) comes before the
          # NGX_HTTP_ACCESS_PHASE (point when basic auth is evaluated). Thus,
          # this return statement returns a response before basic auth is
          # evaluated.
          return 200 'alive';
        }
        set $proxy_pass_url http://go-hello-world-service.putils.svc.cluster.local:9090;
        location / {
          proxy_pass $proxy_pass_url;
        }
      }
    }
  ports:
  - name: http
    port: 80
    targetPort: 0
  - name: https
    port: 443
    targetPort: 0
  replicas: 1
  type: LoadBalancer
